{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAkBtC,OAhBgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SACNN,E,MACAC,IAGFM,EAAO,C,SACLP,E,MACAC,GACA,GAEHA,EAAM,G,CAMAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAA2BC,GACzBA,EAAIC,iBACJ,MAAMC,EAAYC,OAAON,SAASC,cAAc,kBAAkBM,OAC5DC,EAAOF,OAAON,SAASC,cAAc,iBAAiBM,OACtDE,EAASH,OAAON,SAASC,cAAc,mBAAmBM,OAEhE,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAAG,CAExDpB,EAAcoB,EADAL,EAAYG,GAAQE,EAAW,IAE1CC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOG,QACd,sBAAoBzB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', startPromiseChain);\n\nfunction startPromiseChain(evt) {\n  evt.preventDefault();\n  const initDelay = Number(document.querySelector('[name=\"delay\"]').value);\n  const step = Number(document.querySelector('[name=\"step\"]').value);\n  const amount = Number(document.querySelector('[name=\"amount\"]').value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    const delay = initDelay + step * (position - 1);\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","evt","preventDefault","initDelay","Number","value","step","amount","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.e1543884.js.map"}