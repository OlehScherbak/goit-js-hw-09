{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAwBaC,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAA2BC,G,kBAOvB,IAAMC,EAAQC,EAAYC,GAAQC,EAAW,IAhCjD,SAAuBA,EAAUH,GAC/B,IAAMI,EAAgBC,KAAKC,SAAW,GAkBtC,OAhBgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CACNL,WACAH,UAGFS,EAAO,CACLN,WACAH,S,GAGHA,E,KAiBHW,CAAcR,EAAUH,GACrBY,MAAK,WACJC,EAAAnB,GAASoB,OAAOC,QACd,uBAAwCC,OAAfb,EAAS,QAAYa,OAANhB,EAAM,M,IAGjDiB,OAAM,WACLJ,EAAAnB,GAASoB,OAAOI,QACd,sBAAqCF,OAAfb,EAAS,QAAYa,OAANhB,EAAM,M,KAfnDD,EAAIoB,iBAKJ,IAJA,IAAMlB,EAAYmB,OAAOxB,SAASC,cAAc,kBAAkBwB,OAC5DnB,EAAOkB,OAAOxB,SAASC,cAAc,iBAAiBwB,OACtDC,EAASF,OAAOxB,SAASC,cAAc,mBAAmBwB,OAEvDE,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay,\n        });\n      } else {\n        reject({\n          position,\n          delay,\n        });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', startPromiseChain);\n\nfunction startPromiseChain(evt) {\n  evt.preventDefault();\n  const initDelay = Number(document.querySelector('[name=\"delay\"]').value);\n  const step = Number(document.querySelector('[name=\"step\"]').value);\n  const amount = Number(document.querySelector('[name=\"amount\"]').value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    const delay = initDelay + step * (position - 1);\n    createPromise(position, delay)\n      .then(() => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(() => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","document","querySelector","addEventListener","evt","delay","initDelay","step","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","$parcel$interopDefault","Notify","success","concat","catch","failure","preventDefault","Number","value","amount","position1","_loop"],"version":3,"file":"03-promises.50778f18.js.map"}